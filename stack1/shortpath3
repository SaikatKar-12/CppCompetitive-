#include <stdio.h>
#include <limits.h>

#define MAX_VERTICES 100

void source(int a[MAX_VERTICES][MAX_VERTICES], int b[MAX_VERTICES][MAX_VERTICES], int n, int source_vertex) {
    int i, j, k;

    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            if (j != i) {
                b[i][j] = a[i][j];
            } else {
                b[i][j] = 0; // Distance from vertex to itself is 0
            }
        }
    }

    for (k = 0; k < n; k++) {
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (b[i][k] != INT_MAX && b[k][j] != INT_MAX && b[i][k] + b[k][j] < b[i][j]) {
                    b[i][j] = b[i][k] + b[k][j];
                }
            }
        }
    }

    printf("Shortest distances from vertex %d:\n", source_vertex);
    for (j = 0; j < n; j++) {
        printf("%d\n", b[source_vertex][j]);
    }
}

int main() {
    int n, a[MAX_VERTICES][MAX_VERTICES], b[MAX_VERTICES][MAX_VERTICES];
    int i, j, source_vertex;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &a[i][j]);
        }
    }

    printf("Enter the source vertex (0-based indexing): ");
    scanf("%d", &source_vertex);

    source(a, b, n, source_vertex);

    return 0;
}